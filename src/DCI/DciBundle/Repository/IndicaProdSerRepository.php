<?php

namespace DCI\DciBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * IndicaProdSerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IndicaProdSerRepository extends \Doctrine\ORM\EntityRepository{
    
      /**
     * Les Indicateurs d'un produits
     * 
     * @param type $page
     * @param type $nbrAffichPage
     * @param type $idMarch
     * @return Paginator
     */
    public function indicateurDunProd($page, $nbrAffichPage, $idProd) {
        $qb = $this->createQueryBuilder('indi')
                ->select('indi')
                ->leftJoin('indi.categorieEntite', 'categorieEntite')
                ->andWhere('categorieEntite.id =:id')
                ->setParameter('id', $idProd)
                ->orderBy('indi.id', 'DESC')
                ->getQuery();
        $qb
           // On définit l'annonce à partir de laquelle commencer la liste
           ->setFirstResult(($page-1) * $nbrAffichPage)
           // Ainsi que le nombre d'annonce à afficher sur une page
           ->setMaxResults($nbrAffichPage) ;
            
            return new Paginator($qb, true);
    }
    
    public function allIndicaProdSer($page, $nbrAffichPage) {
        $qb = $this->createQueryBuilder('CategorieEntite')
                ->select('CategorieEntite')
                ->getQuery();
        $qb
                // On définit l'annonce à partir de laquelle commencer la liste
                ->setFirstResult(($page - 1) * $nbrAffichPage)
                // Ainsi que le nombre d'annonce à afficher sur une page
                ->setMaxResults($nbrAffichPage);

        return new Paginator($qb, true);
    }
    
    public function indicatD1ProdSer($id, $page, $nbrAffichPage) {
        $qb = $this->createQueryBuilder('IndicaProdSer')
                ->select('IndicaProdSer')
                ->leftJoin('IndicaProdSer.categorieEntite', 'categorieEntite')
                ->andWhere('categorieEntite.id =:id')
                ->setParameter('id', $id)
                ->getQuery();
        $qb
                // On définit l'annonce à partir de laquelle commencer la liste
                ->setFirstResult(($page - 1) * $nbrAffichPage)
                // Ainsi que le nombre d'annonce à afficher sur une page
                ->setMaxResults($nbrAffichPage);

        return new Paginator($qb, true);
    }
}
